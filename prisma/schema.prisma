// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Role {
    id        Int       @id @default(autoincrement())
    name      String    @default("User")
    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt
    deletedAt DateTime?
    User      User[]
}

// done
model User {
    id              Int               @id @default(autoincrement())
    username        String
    email           String            @unique
    password        String
    name            String
    phone           Int?
    note            String?
    ownership_role  Role              @relation(fields: [role_id], references: [id])
    role_id         Int
    avatar          String?
    refresh_token   String?           @db.LongText
    status          Int               @default(1)
    createdAt       DateTime          @default(now())
    updatedAt       DateTime?         @updatedAt
    deletedAt       DateTime?
    roles           String            @default("User")
    Wallet          Wallet[]
    deleteMark      Boolean
    Transaction     Transaction[]
    CategoriesGroup CategoriesGroup[]
    category        Category[]
    monthlyBudget   MonthlyBudget[]
}

model Wallet {
    id             Int           @id @default(autoincrement())
    name           String
    amount         Int
    createdAt      DateTime      @default(now())
    updatedAt      DateTime?     @updatedAt
    deletedAt      DateTime?
    ownership_user User          @relation(fields: [user_id], references: [id])
    user_id        Int
    deleteMark     Boolean
    Transaction    Transaction[]
}

model Currency {
    id         Int       @id @default(autoincrement())
    name       String
    createdAt  DateTime  @default(now())
    updatedAt  DateTime? @updatedAt
    deletedAt  DateTime?
    deleteMark Boolean
}

model Transaction {
    id                        Int             @id @default(autoincrement())
    recordDate                DateTime
    transactionType           String
    category_id               Int
    bill                      Int
    currency_id               Int
    note                      String
    paymentImage              String
    createdAt                 DateTime        @default(now())
    updatedAt                 DateTime?       @updatedAt
    deletedAt                 DateTime?
    deleteMark                Boolean
    ownership_user            User            @relation(fields: [user_id], references: [id])
    user_id                   Int
    ownership_wallet          Wallet          @relation(fields: [wallet_id], references: [id])
    wallet_id                 Int
    ownership_categoriesGroup CategoriesGroup @relation(fields: [categoriesGroup_id], references: [id])
    categoriesGroup_id        Int
}

model CategoriesGroup {
    id             Int           @id @default(autoincrement())
    ownership_user User          @relation(fields: [user_id], references: [id])
    user_id        Int
    name           String
    note           String
    createdAt      DateTime      @default(now())
    updatedAt      DateTime?     @updatedAt
    deletedAt      DateTime?
    deleteMark     Boolean
    Transaction    Transaction[]
    category       Category[]
}

model Category {
    id                        Int             @id @default(autoincrement())
    ownership_user            User            @relation(fields: [user_id], references: [id])
    user_id                   Int
    ownership_categoriesGroup CategoriesGroup @relation(fields: [categoriesGroup_id], references: [id])
    categoriesGroup_id        Int
    name                      Int
    createdAt                 DateTime        @default(now())
    updatedAt                 DateTime?       @updatedAt
    deletedAt                 DateTime?
    deleteMark                Boolean
    MonthlyBudget             MonthlyBudget[]
}

model MonthlyBudget {
    id                 Int       @id @default(autoincrement())
    ownership_user     User      @relation(fields: [user_id], references: [id])
    user_id            Int
    ownership_category Category  @relation(fields: [category_id], references: [id])
    category_id        Int
    amount             Int
    note               String
    createdAt          DateTime  @default(now())
    updatedAt          DateTime? @updatedAt
    deletedAt          DateTime?
    deleteMark         Boolean
}
